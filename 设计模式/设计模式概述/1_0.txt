设计模式（Design pattern）是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的；设计模式使代码编制真正工程化；设计模式是软件工程的基石脉络，如同大厦的结构一样。


为什么要提倡设计模式 (Design Pattern)呢？
根本原因是为了代码复用，增加可维护性。

面向对象有几个原则：
开闭原则（Open Closed Principle，OCP）、
里氏代换原则（Liskov Substitution Principle，LSP）、
依赖倒转原则（Dependency Inversion Principle，DIP）、
接口隔离原则（Interface Segregation Principle，ISP）、
合成/聚合复用原则（Composite/Aggregate Reuse Principle，CARP）、
最小知识原则（Principle of Least Knowledge，PLK，也叫迪米特法则）。

开闭原则具有理想主义的色彩，它是面向对象设计的终极目标。其他几条，则可以看做是开闭原则的实现方法。
设计模式就是实现了这些原则，从而达到了代码复用、增加可维护性的目的。




